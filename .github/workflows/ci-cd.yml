name: CI - CD

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  master:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [master]
        with:
          fetch-depth: 0

  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

  check-packages:
    name: Check - Packages
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Check - Yarn dedupe
        run: yarn dedupe -c

      - name: Check - Packages dependencies
        run: yarn c:pkg:deps

  check-lint:
    name: Check - Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Check - Lint
        run: yarn c:lint:ci

  check-test:
    name: Check - Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Check - Test
        run: yarn c:test:ci

  check-type:
    name: Check - Type
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Check - Type
        run: yarn c:type

  build-api:
    name: Build api + Deploy if master - staging
    needs:
      - check-packages
      - check-lint
      - check-test
      - check-type
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: docker build -f packages/api/environment/staging/Dockerfile.web -t web .

      - name: Push & release image to Heroku staging
        if: contains(github.ref, 'master')
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          docker login --username=${{ secrets.HEROKU_EMAIL }} --password=${{ secrets.HEROKU_API_KEY }} registry.heroku.com
          docker tag web registry.heroku.com/bloup-app/web
          docker push registry.heroku.com/bloup-app/web
          heroku container:release -a bloup-app web
